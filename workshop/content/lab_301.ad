+++
categories = ["general"]
date = "2016-05-11T06:07:56-04:00"
tags = ["document"]
title = "Lab301"
type = "lab"
+++

++++
<link rel="stylesheet"  href="http://cdnjs.cloudflare.com/ajax/libs/font-awesome/3.1.0/css/font-awesome.min.css">
++++
:icons: font

## Lab 01 - Getting Started with Spring Boot

NOTE: The completed code for this lab can be found at `$COURSE_HOME/spring-boot-basics/final/springbox-catalog`.

[abstract]
--
We'll begin the first subproject of our complete cloud-native application architecture: _SpringBox_, which implements the movie browsing portion of a ``Redbox-like'' website.
This microservice will provide the _Movie Catalog Service_, which will allow us to browse movies by genre, browse an individual movie's details, and search for movies.

We'll be using the http://grouplens.org/datasets/movielens/[MovieLens] dataset, and we'll model it's `Movie` and `Genre` concepts in this microservice.

---
***Approximate time: 10 minutes***
--


## `Exercises`  

### `Generate a project`

. In your browser, visit http://start.spring.io.

. Fill out the *Project metadata* fields as follows:
+
Generate :: Maven Project
Spring Boot :: 1.4.2
Group:: `lab`
Artifact:: `springbox-catalog`
Dependencies:: `Web`,`JPA`,`Actuator`,`DevTools`,`Rest Repositories`,`H2`,`Config Client`,`Eureka Discovery`

. Click the *Generate Project* button. Your browser will download a zip file.

. On a terminal window, +
Unpack that zip file into `$COURSE_HOME/spring-boot-basics/initial`.

### `Add a Rest end point`

. cd to the directory `$COURSE_HOME/spring-boot-basics/initial/springbox-catalog`.

. Import the project's `pom.xml` into your editor/IDE of choice.

. Create a class `lab.MovieController` 

. Add a `@RestController` annotation to the class `lab.MovieController`.

. Add the following code to the class `lab.MovieController`:
+
[source,java]
----

	@Value("${greeting}")
	private String greeting;

	@RequestMapping("/")
	public String greet() {
		return greeting;
	}

----

### `Add Greeting`

. cd to the directory `$COURSE_HOME/spring-boot-basics/initial/springbox-catalog`.

. Import the project's `pom.xml` into your editor/IDE of choice.

. Rename  `src/main/resources/application.properties` to `application.yml` 

. Add the following code to the class `application.yml`:
+
[source,json]
----
security:
  basic:
    enabled: false # <---  turn off basic security (on by default)	
greeting: Hello World

----

### `Test the Hello World Endpoint`

. Build and run the application:
+
----
$ mvn spring-boot:run
----


. Try out the following endpoint. The output is omitted here:
http://localhost:8080:: Says `Hello, World`


=== `Clean Up`

NOTE::
The next step is optional. You can continue the next lab using the workspace that you have created, or clean up and follow the next lab from scratch.


Let's clean up our application so that we can have a clean start for the next lab 

. Delete the project from your IDE


*Congratulations!*
You've just completed your first Spring Boot application.
